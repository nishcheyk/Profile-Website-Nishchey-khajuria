{"ast":null,"code":"var _jsxFileName = \"G:\\\\personalprofile\\\\Profile-Website-Nishchey\\\\src\\\\components\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FallingKeysComponent = () => {\n  _s();\n  const [keys, setKeys] = useState([]);\n  const availableKeys = ['<', '>', 'hello world', 'if else', '+', '-', '*', '/', '%', '=', '!', '<', '>', '&', '|', '^', '~', '?', ':', ';', ',', '.', '_', '$', '#', '@', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~', '&', '|', '^', '~', '<<', '>>', '>>>', '++', '--'];\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const count = Math.floor(Math.random() * 10) + 10; // Random number of keys to create\n      const newKeys = [];\n      for (let i = 0; i < count; i++) {\n        const randomKey = availableKeys[Math.floor(Math.random() * availableKeys.length)];\n        const initialLeft = Math.random() * window.innerWidth; // Random initial horizontal position\n        const initialTop = Math.random() * window.innerHeight; // Random initial vertical position\n        const newKey = {\n          id: Date.now() + i,\n          char: randomKey,\n          left: initialLeft,\n          top: initialTop,\n          rotation: Math.floor(Math.random() * 360),\n          // Random rotation angle (0 to 359 degrees)\n          directionX: Math.random() > 0.5 ? 1 : -1,\n          // Random direction for X-axis (1 for right, -1 for left)\n          directionY: Math.random() > 0.5 ? 1 : -1,\n          // Random direction for Y-axis (1 for down, -1 for up)\n          speed: Math.random() * 5 + 2,\n          // Random speed between 2 to 7 units per second\n          size: 18,\n          // Initial font size\n          phase: 'expand' // Initial phase is 'expand'\n        };\n        newKeys.push(newKey);\n\n        // Remove key after a short delay\n        setTimeout(() => {\n          setKeys(prevKeys => prevKeys.filter(k => k.id !== newKey.id));\n        }, 6000); // 6 seconds for removal\n      }\n      setKeys(prevKeys => [...prevKeys, ...newKeys]);\n    }, 2000); // Generate keys every 2 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  const updatePosition = () => {\n    setKeys(prevKeys => prevKeys.map(key => {\n      let newLeft = key.left + key.directionX * key.speed;\n      let newTop = key.top + key.directionY * key.speed;\n\n      // Check if key has gone out of bounds horizontally and adjust direction\n      if (newLeft < 0 || newLeft > window.innerWidth) {\n        newLeft = Math.min(Math.max(newLeft, 0), window.innerWidth); // Ensure key stays within bounds\n        key.directionX *= -1; // Reverse direction to bounce\n      }\n\n      // Check if key has gone out of bounds vertically and adjust direction\n      if (newTop < 0 || newTop > window.innerHeight) {\n        newTop = Math.min(Math.max(newTop, 0), window.innerHeight); // Ensure key stays within bounds\n        key.directionY *= -1; // Reverse direction to bounce\n      }\n\n      // Update size based on the phase\n      let newSize = key.size;\n      if (key.phase === 'expand' && newSize < 48) {\n        newSize += 1; // Increase size to maximum\n      } else if (key.phase === 'expand' && newSize >= 48) {\n        key.phase = 'shrink'; // Change phase to 'shrink'\n      } else if (key.phase === 'shrink' && newSize > 24) {\n        newSize -= 1; // Shrink back to original size\n      } else if (key.phase === 'shrink' && newSize <= 24) {\n        key.phase = 'disappear'; // Change phase to 'disappear'\n      } else if (key.phase === 'disappear' && newSize > 0) {\n        newSize -= 1; // Reduce size to make the key disappear\n      }\n      return {\n        ...key,\n        left: newLeft,\n        top: newTop,\n        size: newSize\n      };\n    }));\n  };\n  useEffect(() => {\n    const updateInterval = setInterval(updatePosition, 50); // Update position every 50 milliseconds\n    return () => clearInterval(updateInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100vh',\n      overflow: 'hidden',\n      backgroundColor: 'black' // Set black background\n    },\n    children: keys.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: key.left,\n        top: key.top,\n        fontSize: `${key.size}px`,\n        // Adjust font size based on the size property\n        color: '#fff',\n        transform: `rotate(${key.rotation}deg)`,\n        // Apply rotation\n        transition: 'left 0.05s linear, top 0.05s linear, font-size 0.05s linear' // Smooth transitions\n      },\n      children: key.char\n    }, key.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(FallingKeysComponent, \"/tjW+HZ1dddiENaEKeOn0mL5dSU=\");\n_c = FallingKeysComponent;\nexport default FallingKeysComponent;\nvar _c;\n$RefreshReg$(_c, \"FallingKeysComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FallingKeysComponent","_s","keys","setKeys","availableKeys","interval","setInterval","count","Math","floor","random","newKeys","i","randomKey","length","initialLeft","window","innerWidth","initialTop","innerHeight","newKey","id","Date","now","char","left","top","rotation","directionX","directionY","speed","size","phase","push","setTimeout","prevKeys","filter","k","clearInterval","updatePosition","map","key","newLeft","newTop","min","max","newSize","updateInterval","style","position","width","height","overflow","backgroundColor","children","fontSize","color","transform","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/personalprofile/Profile-Website-Nishchey/src/components/Background.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FallingKeysComponent = () => {\r\n  const [keys, setKeys] = useState([]);\r\n\r\n  const availableKeys = [\r\n    '<', '>', 'hello world', 'if else', '+', '-', '*', '/', '%', '=', '!', '<', '>', '&', '|', '^', '~', '?',\r\n    ':', ';', ',', '.', '_', '$', '#', '@', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~', '&', '|', '^',\r\n    '~', '<<', '>>', '>>>', '++', '--'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const count = Math.floor(Math.random() * 10) + 10; // Random number of keys to create\r\n      const newKeys = [];\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        const randomKey = availableKeys[Math.floor(Math.random() * availableKeys.length)];\r\n        const initialLeft = Math.random() * window.innerWidth; // Random initial horizontal position\r\n        const initialTop = Math.random() * window.innerHeight; // Random initial vertical position\r\n        const newKey = {\r\n          id: Date.now() + i,\r\n          char: randomKey,\r\n          left: initialLeft,\r\n          top: initialTop,\r\n          rotation: Math.floor(Math.random() * 360), // Random rotation angle (0 to 359 degrees)\r\n          directionX: Math.random() > 0.5 ? 1 : -1, // Random direction for X-axis (1 for right, -1 for left)\r\n          directionY: Math.random() > 0.5 ? 1 : -1, // Random direction for Y-axis (1 for down, -1 for up)\r\n          speed: Math.random() * 5 + 2, // Random speed between 2 to 7 units per second\r\n          size: 18, // Initial font size\r\n          phase: 'expand', // Initial phase is 'expand'\r\n        };\r\n        newKeys.push(newKey);\r\n\r\n        // Remove key after a short delay\r\n        setTimeout(() => {\r\n          setKeys((prevKeys) => prevKeys.filter((k) => k.id !== newKey.id));\r\n        }, 6000); // 6 seconds for removal\r\n      }\r\n\r\n      setKeys((prevKeys) => [...prevKeys, ...newKeys]);\r\n    }, 2000); // Generate keys every 2 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const updatePosition = () => {\r\n    setKeys((prevKeys) =>\r\n      prevKeys.map((key) => {\r\n        let newLeft = key.left + key.directionX * key.speed;\r\n        let newTop = key.top + key.directionY * key.speed;\r\n\r\n        // Check if key has gone out of bounds horizontally and adjust direction\r\n        if (newLeft < 0 || newLeft > window.innerWidth) {\r\n          newLeft = Math.min(Math.max(newLeft, 0), window.innerWidth); // Ensure key stays within bounds\r\n          key.directionX *= -1; // Reverse direction to bounce\r\n        }\r\n\r\n        // Check if key has gone out of bounds vertically and adjust direction\r\n        if (newTop < 0 || newTop > window.innerHeight) {\r\n          newTop = Math.min(Math.max(newTop, 0), window.innerHeight); // Ensure key stays within bounds\r\n          key.directionY *= -1; // Reverse direction to bounce\r\n        }\r\n\r\n        // Update size based on the phase\r\n        let newSize = key.size;\r\n        if (key.phase === 'expand' && newSize < 48) {\r\n          newSize += 1; // Increase size to maximum\r\n        } else if (key.phase === 'expand' && newSize >= 48) {\r\n          key.phase = 'shrink'; // Change phase to 'shrink'\r\n        } else if (key.phase === 'shrink' && newSize > 24) {\r\n          newSize -= 1; // Shrink back to original size\r\n        } else if (key.phase === 'shrink' && newSize <= 24) {\r\n          key.phase = 'disappear'; // Change phase to 'disappear'\r\n        } else if (key.phase === 'disappear' && newSize > 0) {\r\n          newSize -= 1; // Reduce size to make the key disappear\r\n        }\r\n\r\n        return { ...key, left: newLeft, top: newTop, size: newSize };\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateInterval = setInterval(updatePosition, 50); // Update position every 50 milliseconds\r\n    return () => clearInterval(updateInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '100vh',\r\n      overflow: 'hidden',\r\n      backgroundColor: 'black', // Set black background\r\n    }}>\r\n      {keys.map((key) => (\r\n        <div\r\n          key={key.id}\r\n          style={{\r\n            position: 'absolute',\r\n            left: key.left,\r\n            top: key.top,\r\n            fontSize: `${key.size}px`, // Adjust font size based on the size property\r\n            color: '#fff',\r\n            transform: `rotate(${key.rotation}deg)`, // Apply rotation\r\n            transition: 'left 0.05s linear, top 0.05s linear, font-size 0.05s linear', // Smooth transitions\r\n          }}\r\n        >\r\n          {key.char}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FallingKeysComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}