{"ast":null,"code":"var _jsxFileName = \"G:\\\\personalprofile\\\\Profile-Website-Nishchey\\\\src\\\\components\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingKeysComponent = () => {\n  _s();\n  const [codingKeys, setCodingKeys] = useState([]);\n  useEffect(() => {\n    // Array of coding keys\n    const keys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\n\n    // Function to generate random positions for animation\n    const randomPosition = () => Math.random() * 100;\n\n    // Function to generate random size for keys\n    const randomSize = () => Math.random() * 1.5 + 0.5; // Random size between 0.5 and 2 rem\n\n    // Function to generate a new set of coding keys\n    const generateKeys = () => {\n      const newKeys = [];\n      keys.forEach((key, index) => {\n        const initialX = randomPosition();\n        const initialY = randomPosition();\n        const duration = Math.random() * 8 + 8; // Random duration between 8 to 16 seconds\n        const delay = Math.random() * 2; // Random delay between 0 to 2 seconds\n        const size = randomSize();\n        newKeys.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coding-key\",\n          style: {\n            position: 'absolute',\n            color: 'white',\n            fontSize: `${size}rem`,\n            opacity: 1,\n            transform: `translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0)` // Start from further back (z- direction)\n          },\n          children: [key, /*#__PURE__*/_jsxDEV(\"style\", {\n            children: `\n                @keyframes moveKeys${index} {\n                  0% {\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0); // Start from the back\n                    opacity: 0;\n                  }\n                  5% {\n                    opacity: 1;\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(${size}); // Move to a visible position and increase size\n                  }\n                  90% {\n                    opacity: 1;\n                  }\n                  100% {\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(1000000px) scale(${size * 2}); // Move to the front and increase size\n                    opacity: 0;\n                  }\n                }\n              `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, `${key}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this));\n\n        // Additional keyframes for moving back and disappearing\n        newKeys.push( /*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\n              @keyframes moveBackKeys${index} {\n                0% {\n                  transform: translate(${initialX}vw, ${initialY}vh) translateZ(1000000px) scale(${size * 2}); // Start from the front and large\n                  opacity: 0;\n                }\n                5% {\n                  opacity: 1;\n                  transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(${size}); // Move back to a visible position and normal size\n                }\n                90% {\n                  opacity: 1;\n                }\n                100% {\n                  transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0); // Move back to the back and disappear\n                  opacity: 0;\n                }\n              }\n            `\n        }, `styles-back-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this));\n      });\n      setCodingKeys(newKeys);\n    };\n\n    // Generate initial set of coding keys\n    generateKeys();\n\n    // Generate new set of coding keys every 12 seconds\n    const generateKeysInterval = setInterval(() => {\n      generateKeys();\n    }, 120000); // Generate new keys every 12 seconds\n\n    // Clean up interval on component unmount\n    return () => {\n      clearInterval(generateKeysInterval);\n    };\n  }, []); // Empty dependency array to run effect once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-keys-container\",\n    children: [codingKeys, /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .coding-keys-container {\n            position: relative;\n            width: 100%;\n            height: 100vh;\n            background-color: black;\n            overflow: hidden;\n          }\n\n          .coding-key {\n            position: absolute;\n            color: white;\n            font-size: 2rem; /* Default font size */\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(CodingKeysComponent, \"bjtpZymhWvpruDpTyo+yYBVDOQ8=\");\n_c = CodingKeysComponent;\nexport default CodingKeysComponent;\nvar _c;\n$RefreshReg$(_c, \"CodingKeysComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodingKeysComponent","_s","codingKeys","setCodingKeys","keys","randomPosition","Math","random","randomSize","generateKeys","newKeys","forEach","key","index","initialX","initialY","duration","delay","size","push","className","style","position","color","fontSize","opacity","transform","children","fileName","_jsxFileName","lineNumber","columnNumber","generateKeysInterval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["G:/personalprofile/Profile-Website-Nishchey/src/components/Background.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CodingKeysComponent = () => {\r\n  const [codingKeys, setCodingKeys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Array of coding keys\r\n    const keys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\r\n\r\n    // Function to generate random positions for animation\r\n    const randomPosition = () => Math.random() * 100;\r\n\r\n    // Function to generate random size for keys\r\n    const randomSize = () => Math.random() * 1.5 + 0.5; // Random size between 0.5 and 2 rem\r\n\r\n    // Function to generate a new set of coding keys\r\n    const generateKeys = () => {\r\n      const newKeys = [];\r\n      keys.forEach((key, index) => {\r\n        const initialX = randomPosition();\r\n        const initialY = randomPosition();\r\n        const duration = Math.random() * 8 + 8; // Random duration between 8 to 16 seconds\r\n        const delay = Math.random() * 2; // Random delay between 0 to 2 seconds\r\n        const size = randomSize();\r\n\r\n        newKeys.push(\r\n          <div\r\n            key={`${key}-${index}`}\r\n            className=\"coding-key\"\r\n            style={{\r\n              position: 'absolute',\r\n              color: 'white',\r\n              fontSize: `${size}rem`,\r\n              opacity: 1,\r\n              transform: `translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0)`, // Start from further back (z- direction)\r\n            }}\r\n          >\r\n            {key}\r\n            <style>\r\n              {`\r\n                @keyframes moveKeys${index} {\r\n                  0% {\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0); // Start from the back\r\n                    opacity: 0;\r\n                  }\r\n                  5% {\r\n                    opacity: 1;\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(${size}); // Move to a visible position and increase size\r\n                  }\r\n                  90% {\r\n                    opacity: 1;\r\n                  }\r\n                  100% {\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(1000000px) scale(${size * 2}); // Move to the front and increase size\r\n                    opacity: 0;\r\n                  }\r\n                }\r\n              `}\r\n            </style>\r\n          </div>\r\n        );\r\n\r\n        // Additional keyframes for moving back and disappearing\r\n        newKeys.push(\r\n          <style key={`styles-back-${index}`}>\r\n            {`\r\n              @keyframes moveBackKeys${index} {\r\n                0% {\r\n                  transform: translate(${initialX}vw, ${initialY}vh) translateZ(1000000px) scale(${size * 2}); // Start from the front and large\r\n                  opacity: 0;\r\n                }\r\n                5% {\r\n                  opacity: 1;\r\n                  transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(${size}); // Move back to a visible position and normal size\r\n                }\r\n                90% {\r\n                  opacity: 1;\r\n                }\r\n                100% {\r\n                  transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0); // Move back to the back and disappear\r\n                  opacity: 0;\r\n                }\r\n              }\r\n            `}\r\n          </style>\r\n        );\r\n      });\r\n\r\n      setCodingKeys(newKeys);\r\n    };\r\n\r\n    // Generate initial set of coding keys\r\n    generateKeys();\r\n\r\n    // Generate new set of coding keys every 12 seconds\r\n    const generateKeysInterval = setInterval(() => {\r\n      generateKeys();\r\n    }, 120000); // Generate new keys every 12 seconds\r\n\r\n    // Clean up interval on component unmount\r\n    return () => {\r\n      clearInterval(generateKeysInterval);\r\n    };\r\n  }, []); // Empty dependency array to run effect once on mount\r\n\r\n  return (\r\n    <div className=\"coding-keys-container\">\r\n      {codingKeys}\r\n      <style>\r\n        {`\r\n          .coding-keys-container {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100vh;\r\n            background-color: black;\r\n            overflow: hidden;\r\n          }\r\n\r\n          .coding-key {\r\n            position: absolute;\r\n            color: white;\r\n            font-size: 2rem; /* Default font size */\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodingKeysComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}