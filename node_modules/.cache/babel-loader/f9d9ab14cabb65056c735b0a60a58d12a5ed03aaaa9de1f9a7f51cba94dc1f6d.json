{"ast":null,"code":"var _jsxFileName = \"G:\\\\personalprofile\\\\Profile-Website-Nishchey\\\\src\\\\components\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingKeysComponent = () => {\n  _s();\n  const [showKeys, setShowKeys] = useState(false);\n  useEffect(() => {\n    // Show keys after 2 seconds\n    const showKeysTimeout = setTimeout(() => setShowKeys(true), 2000);\n\n    // Hide keys after 6 seconds\n    const hideKeysTimeout = setTimeout(() => setShowKeys(false), 6000);\n    return () => {\n      clearTimeout(showKeysTimeout);\n      clearTimeout(hideKeysTimeout);\n    };\n  }, []);\n  const codingKeys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\n  const keyElements = codingKeys.map((key, index) => {\n    // Generate random initial positions and animation durations\n    const initialX = randomPosition();\n    const initialY = randomPosition();\n    const duration = Math.random() * 6 + 4; // Random duration between 4 to 10 seconds\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coding-key\",\n      style: {\n        opacity: showKeys ? 1 : 0,\n        animation: `moveKeys${index} ${duration}s linear infinite`,\n        transform: `translate3d(${initialX}vw, ${initialY}vh, 0)`\n      },\n      children: [key, /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n            @keyframes moveKeys${index} {\n              0% {\n                transform: translate3d(${initialX}vw, ${initialY}vh, -1000px);\n                opacity: 0;\n              }\n              50% {\n                opacity: 1;\n              }\n              100% {\n                transform: translate3d(${initialX}vw, ${initialY}vh, 0);\n                opacity: 0;\n              }\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-keys-container\",\n    children: [keyElements, /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .coding-keys-container {\n            position: relative;\n            width: 100%;\n            height: 100vh;\n            background-color: black;\n            overflow: hidden;\n          }\n\n          .coding-key {\n            position: absolute;\n            color: white;\n            font-size: 3rem;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to generate random positions for animation\n_s(CodingKeysComponent, \"rEFRByiS2opGkq93H85ZkJNdFdE=\");\n_c = CodingKeysComponent;\nconst randomPosition = () => Math.random() * 100 - 50; // Adjust range as needed\n\nexport default CodingKeysComponent;\nvar _c;\n$RefreshReg$(_c, \"CodingKeysComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodingKeysComponent","_s","showKeys","setShowKeys","showKeysTimeout","setTimeout","hideKeysTimeout","clearTimeout","codingKeys","keyElements","map","key","index","initialX","randomPosition","initialY","duration","Math","random","className","style","opacity","animation","transform","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/personalprofile/Profile-Website-Nishchey/src/components/Background.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CodingKeysComponent = () => {\r\n  const [showKeys, setShowKeys] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Show keys after 2 seconds\r\n    const showKeysTimeout = setTimeout(() => setShowKeys(true), 2000);\r\n\r\n    // Hide keys after 6 seconds\r\n    const hideKeysTimeout = setTimeout(() => setShowKeys(false), 6000);\r\n\r\n    return () => {\r\n      clearTimeout(showKeysTimeout);\r\n      clearTimeout(hideKeysTimeout);\r\n    };\r\n  }, []);\r\n\r\n  const codingKeys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\r\n\r\n  const keyElements = codingKeys.map((key, index) => {\r\n    // Generate random initial positions and animation durations\r\n    const initialX = randomPosition();\r\n    const initialY = randomPosition();\r\n    const duration = Math.random() * 6 + 4; // Random duration between 4 to 10 seconds\r\n\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"coding-key\"\r\n        style={{\r\n          opacity: showKeys ? 1 : 0,\r\n          animation: `moveKeys${index} ${duration}s linear infinite`,\r\n          transform: `translate3d(${initialX}vw, ${initialY}vh, 0)`,\r\n        }}\r\n      >\r\n        {key}\r\n        <style>\r\n          {`\r\n            @keyframes moveKeys${index} {\r\n              0% {\r\n                transform: translate3d(${initialX}vw, ${initialY}vh, -1000px);\r\n                opacity: 0;\r\n              }\r\n              50% {\r\n                opacity: 1;\r\n              }\r\n              100% {\r\n                transform: translate3d(${initialX}vw, ${initialY}vh, 0);\r\n                opacity: 0;\r\n              }\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"coding-keys-container\">\r\n      {keyElements}\r\n      <style>\r\n        {`\r\n          .coding-keys-container {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100vh;\r\n            background-color: black;\r\n            overflow: hidden;\r\n          }\r\n\r\n          .coding-key {\r\n            position: absolute;\r\n            color: white;\r\n            font-size: 3rem;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Function to generate random positions for animation\r\nconst randomPosition = () => Math.random() * 100 - 50; // Adjust range as needed\r\n\r\nexport default CodingKeysComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,eAAe,GAAGC,UAAU,CAAC,MAAMF,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;;IAEjE;IACA,MAAMG,eAAe,GAAGD,UAAU,CAAC,MAAMF,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAElE,OAAO,MAAM;MACXI,YAAY,CAACH,eAAe,CAAC;MAC7BG,YAAY,CAACD,eAAe,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEzF,MAAMC,WAAW,GAAGD,UAAU,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IACjD;IACA,MAAMC,QAAQ,GAAGC,cAAc,CAAC,CAAC;IACjC,MAAMC,QAAQ,GAAGD,cAAc,CAAC,CAAC;IACjC,MAAME,QAAQ,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;IAExC,oBACEnB,OAAA;MAEEoB,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAE;QACLC,OAAO,EAAEnB,QAAQ,GAAG,CAAC,GAAG,CAAC;QACzBoB,SAAS,EAAG,WAAUV,KAAM,IAAGI,QAAS,mBAAkB;QAC1DO,SAAS,EAAG,eAAcV,QAAS,OAAME,QAAS;MACpD,CAAE;MAAAS,QAAA,GAEDb,GAAG,eACJZ,OAAA;QAAAyB,QAAA,EACI;AACZ,iCAAiCZ,KAAM;AACvC;AACA,yCAAyCC,QAAS,OAAME,QAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyCF,QAAS,OAAME,QAAS;AACjE;AACA;AACA;AACA;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA,GAzBHhB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0BP,CAAC;EAEV,CAAC,CAAC;EAEF,oBACE7B,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAK,QAAA,GACnCf,WAAW,eACZV,OAAA;MAAAyB,QAAA,EACI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;;AAED;AAAA3B,EAAA,CAhFMD,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AAiFzB,MAAMc,cAAc,GAAGA,CAAA,KAAMG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;;AAEvD,eAAelB,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}