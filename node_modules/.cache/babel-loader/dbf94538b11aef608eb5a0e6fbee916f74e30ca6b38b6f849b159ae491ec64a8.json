{"ast":null,"code":"var _jsxFileName = \"G:\\\\personalprofile\\\\Profile-Website-Nishchey\\\\src\\\\components\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingKeysComponent = () => {\n  _s();\n  const [codingKeys, setCodingKeys] = useState([]);\n  const [showKeys, setShowKeys] = useState(false);\n  useEffect(() => {\n    // Array of coding keys\n    const keys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\n\n    // Function to generate random positions for animation\n    const randomPosition = () => Math.random() * 100;\n\n    // Immediately show keys\n    setShowKeys(true);\n\n    // Generate new set of coding keys every 8 seconds\n    const generateKeysInterval = setInterval(() => {\n      const newKeys = keys.map((key, index) => {\n        const initialX = randomPosition();\n        const initialY = randomPosition();\n        const duration = Math.random() * 10 + 10; // Random duration between 10 to 20 seconds\n        const delay = Math.random() * 4; // Random delay between 0 to 4 seconds\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coding-key\",\n          style: {\n            opacity: showKeys ? 1 : 0,\n            animation: `moveKeys${index} ${duration}s linear ${delay}s forwards`,\n            // Use forwards to retain final animation state\n            transform: `translate(${initialX}vw, ${initialY}vh) translateZ(-1000px)` // Start from further back (z- direction)\n          },\n          children: [key, /*#__PURE__*/_jsxDEV(\"style\", {\n            children: `\n                @keyframes moveKeys${index} {\n                  0% {\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000px) scale(0); // Start from the back\n                    opacity: 0;\n                  }\n                  5% {\n                    opacity: 1;\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(0.5); // Move to a visible position\n                  }\n                  90% {\n                    opacity: 1;\n                  }\n                  100% {\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(0px) scale(0); // Move to the front and disappear\n                    opacity: 0;\n                  }\n                }\n              `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, `${key}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      });\n      setCodingKeys(newKeys);\n    }, 1000); // Generate new keys every 8 seconds\n\n    return () => {\n      clearInterval(generateKeysInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-keys-container\",\n    children: [codingKeys, /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .coding-keys-container {\n            position: relative;\n            width: 100%;\n            height: 100vh;\n            background-color: black;\n            overflow: hidden;\n          }\n\n          .coding-key {\n            position: absolute;\n            color: white;\n            font-size: 3rem;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CodingKeysComponent, \"yr1JfrLTim0NN0TWarlV71z8Li0=\");\n_c = CodingKeysComponent;\nexport default CodingKeysComponent;\nvar _c;\n$RefreshReg$(_c, \"CodingKeysComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodingKeysComponent","_s","codingKeys","setCodingKeys","showKeys","setShowKeys","keys","randomPosition","Math","random","generateKeysInterval","setInterval","newKeys","map","key","index","initialX","initialY","duration","delay","className","style","opacity","animation","transform","children","fileName","_jsxFileName","lineNumber","columnNumber","clearInterval","_c","$RefreshReg$"],"sources":["G:/personalprofile/Profile-Website-Nishchey/src/components/Background.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CodingKeysComponent = () => {\r\n  const [codingKeys, setCodingKeys] = useState([]);\r\n  const [showKeys, setShowKeys] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Array of coding keys\r\n    const keys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\r\n\r\n    // Function to generate random positions for animation\r\n    const randomPosition = () => Math.random() * 100;\r\n\r\n    // Immediately show keys\r\n    setShowKeys(true);\r\n\r\n    // Generate new set of coding keys every 8 seconds\r\n    const generateKeysInterval = setInterval(() => {\r\n      const newKeys = keys.map((key, index) => {\r\n        const initialX = randomPosition();\r\n        const initialY = randomPosition();\r\n        const duration = Math.random() * 10 + 10; // Random duration between 10 to 20 seconds\r\n        const delay = Math.random() * 4; // Random delay between 0 to 4 seconds\r\n\r\n        return (\r\n          <div\r\n            key={`${key}-${index}`}\r\n            className=\"coding-key\"\r\n            style={{\r\n              opacity: showKeys ? 1 : 0,\r\n              animation: `moveKeys${index} ${duration}s linear ${delay}s forwards`, // Use forwards to retain final animation state\r\n              transform: `translate(${initialX}vw, ${initialY}vh) translateZ(-1000px)`, // Start from further back (z- direction)\r\n            }}\r\n          >\r\n            {key}\r\n            <style>\r\n              {`\r\n                @keyframes moveKeys${index} {\r\n                  0% {\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000px) scale(0); // Start from the back\r\n                    opacity: 0;\r\n                  }\r\n                  5% {\r\n                    opacity: 1;\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(0.5); // Move to a visible position\r\n                  }\r\n                  90% {\r\n                    opacity: 1;\r\n                  }\r\n                  100% {\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(0px) scale(0); // Move to the front and disappear\r\n                    opacity: 0;\r\n                  }\r\n                }\r\n              `}\r\n            </style>\r\n          </div>\r\n        );\r\n      });\r\n\r\n      setCodingKeys(newKeys);\r\n    }, 1000); // Generate new keys every 8 seconds\r\n\r\n    return () => {\r\n      clearInterval(generateKeysInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coding-keys-container\">\r\n      {codingKeys}\r\n      <style>\r\n        {`\r\n          .coding-keys-container {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100vh;\r\n            background-color: black;\r\n            overflow: hidden;\r\n          }\r\n\r\n          .coding-key {\r\n            position: absolute;\r\n            color: white;\r\n            font-size: 3rem;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodingKeysComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;IAEnF;IACA,MAAMC,cAAc,GAAGA,CAAA,KAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;;IAEhD;IACAJ,WAAW,CAAC,IAAI,CAAC;;IAEjB;IACA,MAAMK,oBAAoB,GAAGC,WAAW,CAAC,MAAM;MAC7C,MAAMC,OAAO,GAAGN,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QACvC,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;QACjC,MAAMU,QAAQ,GAAGV,cAAc,CAAC,CAAC;QACjC,MAAMW,QAAQ,GAAGV,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1C,MAAMU,KAAK,GAAGX,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEjC,oBACEV,OAAA;UAEEqB,SAAS,EAAC,YAAY;UACtBC,KAAK,EAAE;YACLC,OAAO,EAAElB,QAAQ,GAAG,CAAC,GAAG,CAAC;YACzBmB,SAAS,EAAG,WAAUR,KAAM,IAAGG,QAAS,YAAWC,KAAM,YAAW;YAAE;YACtEK,SAAS,EAAG,aAAYR,QAAS,OAAMC,QAAS,yBAAwB,CAAE;UAC5E,CAAE;UAAAQ,QAAA,GAEDX,GAAG,eACJf,OAAA;YAAA0B,QAAA,EACI;AAChB,qCAAqCV,KAAM;AAC3C;AACA,2CAA2CC,QAAS,OAAMC,QAAS;AACnE;AACA;AACA;AACA;AACA,2CAA2CD,QAAS,OAAMC,QAAS;AACnE;AACA;AACA;AACA;AACA;AACA,2CAA2CD,QAAS,OAAMC,QAAS;AACnE;AACA;AACA;AACA;UAAe;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA,GA7BF,GAAEf,GAAI,IAAGC,KAAM,EAAC;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8BnB,CAAC;MAEV,CAAC,CAAC;MAEF1B,aAAa,CAACS,OAAO,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAM;MACXkB,aAAa,CAACpB,oBAAoB,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAK,QAAA,GACnCvB,UAAU,eACXH,OAAA;MAAA0B,QAAA,EACI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxFID,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AA0FzB,eAAeA,mBAAmB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}