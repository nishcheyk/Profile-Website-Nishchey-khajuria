{"ast":null,"code":"var _jsxFileName = \"G:\\\\personalprofile\\\\Profile-Website-Nishchey\\\\src\\\\components\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingKeysComponent = () => {\n  _s();\n  const [codingKeys, setCodingKeys] = useState([]);\n  const [showKeys, setShowKeys] = useState(true); // Start showing keys immediately\n\n  useEffect(() => {\n    // Array of coding keys\n    const keys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\n\n    // Function to generate random positions for animation\n    const randomPosition = () => Math.random() * 100;\n\n    // Function to generate random size for keys\n    const randomSize = () => Math.random() * 3 + 1; // Random size between 1 and 4 rem\n\n    // Function to generate a new set of coding keys\n    const generateKeys = () => {\n      const newKeys = [];\n      for (let i = 0; i < 10; i++) {\n        // Generate 100 new keys to fill the page\n        const key = keys[Math.floor(Math.random() * keys.length)];\n        const initialX = randomPosition();\n        const initialY = randomPosition();\n        const duration = Math.random() * 60 + 60; // Random duration between 60 to 120 seconds (slower)\n        const delay = Math.random() * 4; // Random delay between 0 to 4 seconds\n        const size = randomSize();\n        newKeys.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coding-key\",\n          style: {\n            opacity: showKeys ? 1 : 0,\n            animation: `moveKeys${i} ${duration}s linear ${delay}s forwards`,\n            // Animation forwards once\n            transform: `translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0)`,\n            // Start from further back (z- direction)\n            fontSize: `${size}rem` // Random size for each key\n          },\n          children: [key, /*#__PURE__*/_jsxDEV(\"style\", {\n            children: `\n                @keyframes moveKeys${i} {\n                  0% {\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0); // Start from the back\n                    opacity: 0;\n                  }\n                  5% {\n                    opacity: 1;\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(1); // Move to a visible position and increase size\n                  }\n                  90% {\n                    opacity: 1;\n                  }\n                  100% {\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(1000000px) scale(2); // Move to the front and increase size\n                    opacity: 0;\n                  }\n                }\n              `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, `${key}-${i}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this));\n      }\n      setCodingKeys(newKeys);\n    };\n\n    // Generate initial set of coding keys\n    generateKeys();\n\n    // Generate new set of coding keys every 8 seconds\n    const generateKeysInterval = setInterval(() => {\n      generateKeys();\n    }, 12000); // Generate new keys every 8 seconds\n\n    return () => {\n      clearInterval(generateKeysInterval);\n    };\n  }, []); // Empty dependency array to run effect once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-keys-container\",\n    children: [codingKeys, /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .coding-keys-container {\n            position: relative;\n            width: 100%;\n            height: 100vh;\n            background-color: black;\n            overflow: hidden;\n          }\n\n          .coding-key {\n            position: absolute;\n            color: white;\n            font-size: 3rem;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CodingKeysComponent, \"QkXPlJA2aSD2q6jT2mhLVe+4byI=\");\n_c = CodingKeysComponent;\nexport default CodingKeysComponent;\nvar _c;\n$RefreshReg$(_c, \"CodingKeysComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodingKeysComponent","_s","codingKeys","setCodingKeys","showKeys","setShowKeys","keys","randomPosition","Math","random","randomSize","generateKeys","newKeys","i","key","floor","length","initialX","initialY","duration","delay","size","push","className","style","opacity","animation","transform","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","generateKeysInterval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["G:/personalprofile/Profile-Website-Nishchey/src/components/Background.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CodingKeysComponent = () => {\r\n  const [codingKeys, setCodingKeys] = useState([]);\r\n  const [showKeys, setShowKeys] = useState(true); // Start showing keys immediately\r\n\r\n  useEffect(() => {\r\n    // Array of coding keys\r\n    const keys = ['<', '>', '\"', ':', ';', \"'\", '?', '(', ')', '&', '$', '@', '#', '~'];\r\n\r\n    // Function to generate random positions for animation\r\n    const randomPosition = () => Math.random() * 100;\r\n\r\n    // Function to generate random size for keys\r\n    const randomSize = () => Math.random() * 3 + 1; // Random size between 1 and 4 rem\r\n\r\n    // Function to generate a new set of coding keys\r\n    const generateKeys = () => {\r\n      const newKeys = [];\r\n      for (let i = 0; i < 10; i++) { // Generate 100 new keys to fill the page\r\n        const key = keys[Math.floor(Math.random() * keys.length)];\r\n        const initialX = randomPosition();\r\n        const initialY = randomPosition();\r\n        const duration = Math.random() * 60 + 60; // Random duration between 60 to 120 seconds (slower)\r\n        const delay = Math.random() * 4; // Random delay between 0 to 4 seconds\r\n        const size = randomSize();\r\n\r\n        newKeys.push(\r\n          <div\r\n            key={`${key}-${i}`}\r\n            className=\"coding-key\"\r\n            style={{\r\n              opacity: showKeys ? 1 : 0,\r\n              animation: `moveKeys${i} ${duration}s linear ${delay}s forwards`, // Animation forwards once\r\n              transform: `translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0)`, // Start from further back (z- direction)\r\n              fontSize: `${size}rem`, // Random size for each key\r\n            }}\r\n          >\r\n            {key}\r\n            <style>\r\n              {`\r\n                @keyframes moveKeys${i} {\r\n                  0% {\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-1000000px) scale(0); // Start from the back\r\n                    opacity: 0;\r\n                  }\r\n                  5% {\r\n                    opacity: 1;\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(-500px) scale(1); // Move to a visible position and increase size\r\n                  }\r\n                  90% {\r\n                    opacity: 1;\r\n                  }\r\n                  100% {\r\n                    transform: translate(${initialX}vw, ${initialY}vh) translateZ(1000000px) scale(2); // Move to the front and increase size\r\n                    opacity: 0;\r\n                  }\r\n                }\r\n              `}\r\n            </style>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      setCodingKeys(newKeys);\r\n    };\r\n\r\n    // Generate initial set of coding keys\r\n    generateKeys();\r\n\r\n    // Generate new set of coding keys every 8 seconds\r\n    const generateKeysInterval = setInterval(() => {\r\n      generateKeys();\r\n    }, 12000); // Generate new keys every 8 seconds\r\n\r\n    return () => {\r\n      clearInterval(generateKeysInterval);\r\n    };\r\n  }, []); // Empty dependency array to run effect once on mount\r\n\r\n  return (\r\n    <div className=\"coding-keys-container\">\r\n      {codingKeys}\r\n      <style>\r\n        {`\r\n          .coding-keys-container {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100vh;\r\n            background-color: black;\r\n            overflow: hidden;\r\n          }\r\n\r\n          .coding-key {\r\n            position: absolute;\r\n            color: white;\r\n            font-size: 3rem;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodingKeysComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}